{*******************************************************}
{                                                       }
{                      ES Sistemas                      }
{                                                       }
{ Empresas de Sistemas 2003-2023 www.bemoreweb.com.br   }
{                     (17)98169-5336                    }
{                                                       }
{*******************************************************}

unit Uteis.Tratar.Mensagens;

interface

uses
  System.SysUtils,
  Vcl.Dialogs,
  System.Classes,
  Vcl.Forms,

  FireDAC.Stan.Error;


type
  TTratarMensagens = class
    private
      FlogFile : String;
    public
      constructor Create;
      procedure TratarException(Sender : TObject; E : Exception);
      procedure GravarLog(aValue : String);
      function Mensagemok(aValue : Integer) : String;
      function MSGnotGet   : String;
      function MSGerroGet  : String;
      function MSGokPost   : String;
      function MSGokPut    : String;
      function MSGokDelete : String;

      function TratarErroSQL(): String;
  end;

implementation


{ TException }

constructor TTratarMensagens.Create;
begin
  FLogFile := ChangeFileExt(ParamStr(0), '.log');
  Application.OnException := TratarException;
end;

procedure TTratarMensagens.GravarLog(aValue: String);
var
  LTXTLog : TextFile;
begin
  AssignFile(LTXTLog, FLogFile);
  if FileExists(FLogFile) then
    Append(LTXTLog) else Rewrite(LTXTLog);


  Writeln(LTXTLog, FormatDateTime('dd/mm/yyyy - ', now) + aValue);
  CloseFile(LTXTLog);
end;

function TTratarMensagens.mensagemOK(aValue: integer): String;
begin
  case aValue of
   0 : Result := 'Registro salvo com sucesso';
   1 : Result := 'Registro atualizado com sucesso';
   2 : Result := 'Registro excluído com sucesso';
   3 : Result := 'Registro não encontrado';
  end;
end;

function TTratarMensagens.MSGokDelete: String;
begin
  Result :='Registro excluído com sucesso';
end;

function TTratarMensagens.MSGerroGet: String;
begin
  Result :='ao tentar filtrar o registro';
end;

function TTratarMensagens.MSGnotGet: String;
begin
  Result :='Registro não encontrado';
end;

function TTratarMensagens.MSGokPost: String;
begin
  Result :='Registro salvo com sucesso';
end;

function TTratarMensagens.MSGokPut: String;
begin
  Result :='Registro atualizado com sucesso';
end;

function TTratarMensagens.TratarErroSQL: String;
begin
  try

  except
    on E : EFDDBEngineException do
    begin
      case E.Kind of
        ekOther : ;
        ekNoDataFound: ;
        ekTooManyRows: ;
        ekRecordLocked: ;
        ekUKViolated : ShowMessage('Já existe este ID');
        ekFKViolated: ;
        ekObjNotExists: ;
        ekUserPwdInvalid: ;
        ekUserPwdExpired: ;
        ekUserPwdWillExpire: ;
        ekCmdAborted: ;
        ekServerGone: ;
        ekServerOutput: ;
        ekArrExecMalfunc: ;
        ekInvalidParams: ;
      end;
    end;
  end;

end;

procedure TTratarMensagens.TratarException(Sender: TObject; E: Exception);
begin
  GravarLog('===================================================');
  if TComponent(Sender) is TForm then
  begin
    GravarLog('Form: '+ TForm(Sender).Name);
    GravarLog('Caption: '+ TForm(Sender).Caption);
    GravarLog('Erro: '+ E.ClassName);
    GravarLog('Erro: '+ E.Message);
  end
  else
  begin
    GravarLog('Form: '+ TForm(TComponent(Sender).Owner).Name);
    GravarLog('Caption: '+ TForm(TComponent(Sender).Owner).Caption);
    GravarLog('Erro: '+ E.ClassName);
    GravarLog('Erro: '+ E.Message);
  end;
  ShowMessage(E.Message);
end;

var
  FTratarException : TTratarMensagens;

initialization
  FTratarException := TTratarMensagens.Create;

finalization
  FreeAndNIl(FTratarException);
end.
